name: Publish on tag
on:
  pull_request:
  push:
    tags: [v*]
  workflow_dispatch:

env:
  PAGES_BRANCH: gh-pages
  HTTPS_REMOTE: "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"

jobs:
  publish:
    name: Publish Release
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm i
      - name: Set up version
        run: |
          # Extract package name and version
          NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
          NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" > .npmrc
      - name: publish-chain-api
        run: |
          cd chain-api
          # npm i
          # npm run build
          # Publish to NPM registry
          # npm publish --access public
          cd ../

      - name: publish-chain-test
        run: |
          cd chain-test
          # npm i
          # npm run build
          # npm publish --access public
          cd ../

      - name: publish-chain-cli
        run: |
          cd chain-cli
          # npm i
          # npm run build
          # npm publish --access public
          cd ../

      - name: publish-chaincode
        run: |
          cd chaincode
          # npm i
          # npm run build
          # npm publish --access public
          cd ../

      - name: publish-client
        run: |
          cd chain-client
          # npm i
          # npm run build
          # npm publish --access public
          cd ../

  publish-pages:
    name: Publish Pages
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - name: Publish pages
        run: echo "Publish pages"

  publish-cli-image:
    name: Publish CLI Image
    needs: [publish]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: galachain/sdk
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Publish CLI Image
        run: echo "Publish pages"

  bump-version:
    needs: [publish, publish-cli-image]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    name: Bump SDK Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "main"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install tools
        run: npm i -g semver
      - name: Configure Git
        run: |
          git config --global user.name "galachain-release-bot"
          git config --global user.email "galachain-release-bot@users.noreply.github.com"
      - name: Set a new version
        run: |
          VERSION="$(semver "$(< package.json jq -r '.version')" -i)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Create a new branch
        run: |
          BRANCH_NAME="bump-version-to-$VERSION"
          git checkout -b $BRANCH_NAME main
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      - name: Bump version and commit changes
        run: |
          ./unifyVersions.js $VERSION
          npm i
          git commit -am "Bump version to $VERSION"
          git push --set-upstream origin bump-version-to-$VERSION
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.RELEASE_BOT_TOKEN }}
        run: gh pr create --title "Bump Version to $VERSION" --body "Bump Version to $VERSION" --label "bump-version-pr" --head "bump-version-to-$VERSION" --base main
  approve-and-merge:
    needs: [bump-version]
    runs-on: ubuntu-latest
    if: github.actor == 'github-actions'
    steps:
      - name: Auto Approve PR
        uses: hmarr/auto-approve-action@v4
      - name: Push next version release
        uses: pascalgn/automerge-action@v0.16.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: "squash"
          MERGE_COMMIT_MESSAGE: "Bump Version to ${env.VERSION}"